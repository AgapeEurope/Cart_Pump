'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18033
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
'
Namespace FCX_API
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FCX_APISoap", [Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class FCX_API
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestWhiteListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFinanicialTransactionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDonationBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDonationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatusOfBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UndoBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Cart_Pump.My.MySettings.Default.Cart_Pump_FCX_API_FCX_API
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event TestWhiteListCompleted As TestWhiteListCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFinanicialTransactionsCompleted As AddFinanicialTransactionsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDonationBatchCompleted As AddDonationBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDonationCompleted As AddDonationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatusOfBatchCompleted As GetStatusOfBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event UndoBatchCompleted As UndoBatchCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/HelloWorld", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/TestWhiteList", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestWhiteList(ByVal WhilstList As String) As String
            Dim results() As Object = Me.Invoke("TestWhiteList", New Object() {WhilstList})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestWhiteListAsync(ByVal WhilstList As String)
            Me.TestWhiteListAsync(WhilstList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestWhiteListAsync(ByVal WhilstList As String, ByVal userState As Object)
            If (Me.TestWhiteListOperationCompleted Is Nothing) Then
                Me.TestWhiteListOperationCompleted = AddressOf Me.OnTestWhiteListOperationCompleted
            End If
            Me.InvokeAsync("TestWhiteList", New Object() {WhilstList}, Me.TestWhiteListOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestWhiteListOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestWhiteListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestWhiteListCompleted(Me, New TestWhiteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/AddFinanicialTransactions", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFinanicialTransactions(ByVal ApiKey As System.Guid, ByVal UniqueBatRef As String, ByVal Ledger As String, ByVal Description As String, <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> ByVal Transactions() As FinancialTransaction) As TrxResponse
            Dim results() As Object = Me.Invoke("AddFinanicialTransactions", New Object() {ApiKey, UniqueBatRef, Ledger, Description, Transactions})
            Return CType(results(0),TrxResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFinanicialTransactionsAsync(ByVal ApiKey As System.Guid, ByVal UniqueBatRef As String, ByVal Ledger As String, ByVal Description As String, ByVal Transactions() As FinancialTransaction)
            Me.AddFinanicialTransactionsAsync(ApiKey, UniqueBatRef, Ledger, Description, Transactions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFinanicialTransactionsAsync(ByVal ApiKey As System.Guid, ByVal UniqueBatRef As String, ByVal Ledger As String, ByVal Description As String, ByVal Transactions() As FinancialTransaction, ByVal userState As Object)
            If (Me.AddFinanicialTransactionsOperationCompleted Is Nothing) Then
                Me.AddFinanicialTransactionsOperationCompleted = AddressOf Me.OnAddFinanicialTransactionsOperationCompleted
            End If
            Me.InvokeAsync("AddFinanicialTransactions", New Object() {ApiKey, UniqueBatRef, Ledger, Description, Transactions}, Me.AddFinanicialTransactionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFinanicialTransactionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFinanicialTransactionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFinanicialTransactionsCompleted(Me, New AddFinanicialTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/AddDonationBatch", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDonationBatch(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> ByVal Donations() As Donation) As TrxResponse
            Dim results() As Object = Me.Invoke("AddDonationBatch", New Object() {ApiKey, UniqueRef, Donations})
            Return CType(results(0),TrxResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDonationBatchAsync(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, ByVal Donations() As Donation)
            Me.AddDonationBatchAsync(ApiKey, UniqueRef, Donations, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDonationBatchAsync(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, ByVal Donations() As Donation, ByVal userState As Object)
            If (Me.AddDonationBatchOperationCompleted Is Nothing) Then
                Me.AddDonationBatchOperationCompleted = AddressOf Me.OnAddDonationBatchOperationCompleted
            End If
            Me.InvokeAsync("AddDonationBatch", New Object() {ApiKey, UniqueRef, Donations}, Me.AddDonationBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDonationBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDonationBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDonationBatchCompleted(Me, New AddDonationBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/AddDonation", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDonation(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, ByVal DonorId As String, ByVal Description As String, <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> ByVal Donations() As Donation) As TrxResponse
            Dim results() As Object = Me.Invoke("AddDonation", New Object() {ApiKey, UniqueRef, DonorId, Description, Donations})
            Return CType(results(0),TrxResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddDonationAsync(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, ByVal DonorId As String, ByVal Description As String, ByVal Donations() As Donation)
            Me.AddDonationAsync(ApiKey, UniqueRef, DonorId, Description, Donations, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDonationAsync(ByVal ApiKey As System.Guid, ByVal UniqueRef As String, ByVal DonorId As String, ByVal Description As String, ByVal Donations() As Donation, ByVal userState As Object)
            If (Me.AddDonationOperationCompleted Is Nothing) Then
                Me.AddDonationOperationCompleted = AddressOf Me.OnAddDonationOperationCompleted
            End If
            Me.InvokeAsync("AddDonation", New Object() {ApiKey, UniqueRef, DonorId, Description, Donations}, Me.AddDonationOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDonationOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDonationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDonationCompleted(Me, New AddDonationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/GetStatusOfBatch", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatusOfBatch(ByVal ApiKey As String, ByVal UniqueBatRef As String) As TrxResponse
            Dim results() As Object = Me.Invoke("GetStatusOfBatch", New Object() {ApiKey, UniqueBatRef})
            Return CType(results(0),TrxResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatusOfBatchAsync(ByVal ApiKey As String, ByVal UniqueBatRef As String)
            Me.GetStatusOfBatchAsync(ApiKey, UniqueBatRef, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatusOfBatchAsync(ByVal ApiKey As String, ByVal UniqueBatRef As String, ByVal userState As Object)
            If (Me.GetStatusOfBatchOperationCompleted Is Nothing) Then
                Me.GetStatusOfBatchOperationCompleted = AddressOf Me.OnGetStatusOfBatchOperationCompleted
            End If
            Me.InvokeAsync("GetStatusOfBatch", New Object() {ApiKey, UniqueBatRef}, Me.GetStatusOfBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatusOfBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatusOfBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatusOfBatchCompleted(Me, New GetStatusOfBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://agapeconnect.me/UndoBatch", RequestNamespace:="http://agapeconnect.me/", ResponseNamespace:="http://agapeconnect.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UndoBatch(ByVal ApiKey As String, ByVal UniqueBatRef As String) As TrxResponse
            Dim results() As Object = Me.Invoke("UndoBatch", New Object() {ApiKey, UniqueBatRef})
            Return CType(results(0),TrxResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UndoBatchAsync(ByVal ApiKey As String, ByVal UniqueBatRef As String)
            Me.UndoBatchAsync(ApiKey, UniqueBatRef, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UndoBatchAsync(ByVal ApiKey As String, ByVal UniqueBatRef As String, ByVal userState As Object)
            If (Me.UndoBatchOperationCompleted Is Nothing) Then
                Me.UndoBatchOperationCompleted = AddressOf Me.OnUndoBatchOperationCompleted
            End If
            Me.InvokeAsync("UndoBatch", New Object() {ApiKey, UniqueBatRef}, Me.UndoBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnUndoBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.UndoBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UndoBatchCompleted(Me, New UndoBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class FinancialTransaction
        
        Private uniqueTRXRefField As String
        
        Private accountField As String
        
        Private rcField As String
        
        Private amountField As Double
        
        Private descriptionField As String
        
        Private trxDateField As Date
        
        Private optionalCalendarMonthField As System.Nullable(Of Integer)
        
        Private optionalCalendarYearField As System.Nullable(Of Integer)
        
        Private transactionId_READONLYField As System.Nullable(Of Integer)
        
        '''<remarks/>
        Public Property UniqueTRXRef() As String
            Get
                Return Me.uniqueTRXRefField
            End Get
            Set
                Me.uniqueTRXRefField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Account() As String
            Get
                Return Me.accountField
            End Get
            Set
                Me.accountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RC() As String
            Get
                Return Me.rcField
            End Get
            Set
                Me.rcField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Double
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrxDate() As Date
            Get
                Return Me.trxDateField
            End Get
            Set
                Me.trxDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property optionalCalendarMonth() As System.Nullable(Of Integer)
            Get
                Return Me.optionalCalendarMonthField
            End Get
            Set
                Me.optionalCalendarMonthField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property optionalCalendarYear() As System.Nullable(Of Integer)
            Get
                Return Me.optionalCalendarYearField
            End Get
            Set
                Me.optionalCalendarYearField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TransactionId_READONLY() As System.Nullable(Of Integer)
            Get
                Return Me.transactionId_READONLYField
            End Get
            Set
                Me.transactionId_READONLYField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class Prop
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class Donor
        
        Private donorIdField As String
        
        Private titleField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private spouseFirstNameField As String
        
        Private spouseMiddleNameField As String
        
        Private emailField As String
        
        Private streetAddressField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipField As String
        
        Private countryField As String
        
        Private mobilePhoneField As String
        
        Private phoneField As String
        
        Private otherField() As Prop
        
        Private uniqueDonorRefField As String
        
        '''<remarks/>
        Public Property DonorId() As String
            Get
                Return Me.donorIdField
            End Get
            Set
                Me.donorIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SpouseFirstName() As String
            Get
                Return Me.spouseFirstNameField
            End Get
            Set
                Me.spouseFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SpouseMiddleName() As String
            Get
                Return Me.spouseMiddleNameField
            End Get
            Set
                Me.spouseMiddleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetAddress() As String
            Get
                Return Me.streetAddressField
            End Get
            Set
                Me.streetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Other() As Prop()
            Get
                Return Me.otherField
            End Get
            Set
                Me.otherField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UniqueDonorRef() As String
            Get
                Return Me.uniqueDonorRefField
            End Get
            Set
                Me.uniqueDonorRefField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class Donation
        
        Private donorField As Donor
        
        Private amountField As Double
        
        Private giftDateField As Date
        
        Private globalDonorcodeField As String
        
        Private paymentTypeField As String
        
        Private desigIdField As String
        
        Private paymentProcessorField As String
        
        Private paymentProcessorTrxIdField As String
        
        Private iBANField As String
        
        Private vCodeField As String
        
        Private otherField() As Prop
        
        Private uniqueDonationRefField As String
        
        '''<remarks/>
        Public Property Donor() As Donor
            Get
                Return Me.donorField
            End Get
            Set
                Me.donorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Double
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GiftDate() As Date
            Get
                Return Me.giftDateField
            End Get
            Set
                Me.giftDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GlobalDonorcode() As String
            Get
                Return Me.globalDonorcodeField
            End Get
            Set
                Me.globalDonorcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentType() As String
            Get
                Return Me.paymentTypeField
            End Get
            Set
                Me.paymentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DesigId() As String
            Get
                Return Me.desigIdField
            End Get
            Set
                Me.desigIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentProcessor() As String
            Get
                Return Me.paymentProcessorField
            End Get
            Set
                Me.paymentProcessorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentProcessorTrxId() As String
            Get
                Return Me.paymentProcessorTrxIdField
            End Get
            Set
                Me.paymentProcessorTrxIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IBAN() As String
            Get
                Return Me.iBANField
            End Get
            Set
                Me.iBANField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VCode() As String
            Get
                Return Me.vCodeField
            End Get
            Set
                Me.vCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Other() As Prop()
            Get
                Return Me.otherField
            End Get
            Set
                Me.otherField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UniqueDonationRef() As String
            Get
                Return Me.uniqueDonationRefField
            End Get
            Set
                Me.uniqueDonationRefField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://agapeconnect.me/")>  _
    Partial Public Class TrxResponse
        
        Private statusField As String
        
        Private messageField As String
        
        Private errorCodeField As String
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TestWhiteListCompletedEventHandler(ByVal sender As Object, ByVal e As TestWhiteListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestWhiteListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddFinanicialTransactionsCompletedEventHandler(ByVal sender As Object, ByVal e As AddFinanicialTransactionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFinanicialTransactionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrxResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrxResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddDonationBatchCompletedEventHandler(ByVal sender As Object, ByVal e As AddDonationBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDonationBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrxResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrxResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddDonationCompletedEventHandler(ByVal sender As Object, ByVal e As AddDonationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddDonationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrxResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrxResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetStatusOfBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatusOfBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatusOfBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrxResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrxResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UndoBatchCompletedEventHandler(ByVal sender As Object, ByVal e As UndoBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UndoBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrxResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrxResponse)
            End Get
        End Property
    End Class
End Namespace
